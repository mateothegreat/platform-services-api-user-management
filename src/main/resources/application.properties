###
# $$SoftwareLicense
# Streaming Platform Users API
# %%
# Copyright (C) 2017 streamnvr
# %%
# __
#       /\ \__
#   ____\ \ ,_\  _ __    __     __      ___ ___     ___   __  __   _ __
#  /',__\\ \ \/ /\`'__\/'__`\ /'__`\  /' __` __`\ /' _ `\/\ \/\ \ /\`'__\
# /\__, `\\ \ \_\ \ \//\  __//\ \L\.\_/\ \/\ \/\ \/\ \/\ \ \ \_/ |\ \ \/
# \/\____/ \ \__\\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\ \_\ \_\ \___/  \ \_\
#  \/___/   \/__/ \/_/ \/____/\/__/\/_/\/_/\/_/\/_/\/_/\/_/\/__/    \/_/
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/gpl-3.0.html>.
# streaming-platform.com
###

# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html

debug                                                         = false

#
# Spring Main
#
#spring.application.admin.enabled                       = true
#server.address                                                = 127.0.0.1
#server.address                                                = 172.17.173.150
spring.application.name                                       = user-management-service
spring.main.banner-mode                                       = off

#
# Profiles
#
#spring.profiles.active                                        = @spring.profiles.active@
spring.profiles.active                                        = testing
#spring.profiles.include                                = testing
#spring.testing.mockmvc.print                              = default

# JPA / HIBERNATE
#
#spring.jpa.show-sql                                    = true
#spring.jpa.database                                    = mysql
##spring.jpa.hibernate.ddl-auto                          = update
#spring.jpa.properties.hibernate.jdbc.time_zone         = UTC
#spring.jpa.properties.hibernate.show_sql               = true
#spring.jpa.hibernate.ddl-auto                          = create
#spring.jpa.properties.hibernate.dialect                = org.hibernate.dialect.MySQL5Dialect
#
# Building
#
spring.info.build.location                                    = file:build-info.properties
spring.info.git.location                                      = file:git.properties

#
# Security
#
security.require-ssl                                          = false
#
# Sessions
#
server.session.timeout                                        = 86400
security.sessions                                             = always
spring.session.store-type                                     = redis
spring.data.redis.repositories.enabled                        = true
spring.redis.timeout                                          = 10
spring.redis.host                                             = localhost
#spring.redis.host                                             = 10.0.0.186
spring.redis.port                                             = 6379
##
# Logging
#
#spring.output.ansi.enabled                                    = always
#logging.file                                                  = logs\\application.log
#logging.level.root                                     = @logging.level.root@
#logging.level.root                                            = INFO
#logging.level.org.hibernate                                   = DEBUG
#logging.level.org.springframework.authentication              = DEBUG
#logging.level.org.springframework.web                         = INFO
#logging.level.org.hibernate.SQL                               = DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder   = TRACE
#logging.level.org.springframework.boot.autoconfigure.security = TRACE
#

logging.level.root                                            = info
logging.level.org.hibernate                                   = off
#logging.level.org.springframework.authentication              = DEBUG
#logging.level.org.springframework.web                         = INFO
logging.level.org.hibernate.SQL                               = off
logging.level.org.hibernate.type.descriptor.sql.BasicBinder   = off
logging.level.org.springframework.boot.autoconfigure.security = off

#
# Actuator/Management
#
endpoints.enabled                                             = true

endpoints.health.enabled                                      = true
endpoints.shutdown.enabled                                    = true
endpoints.health.sensitive                                    = false
endpoints.restart.enabled                                     = true
endpoints.metrics.enabled                                     = true
endpoints.trace.enabled                                       = true
endpoints.hypermedia.enabled                                  = true
endpoints.actuator.enabled                                    = true
spring.hateoas.use-hal-as-default-json-media-type             = true
management.security.enabled                                   = false
#management.address                                            = 172.17.173.150
management.port                                               = 9000
management.info.defaults.enabled                              = true
management.info.env.enabled                                   = true
management.info.build.enabled                                 = true
management.info.git.enabled                                   = true
management.info.git.mode                                      = full
management.health.db.enabled                                  = true

##
## Server
##
#server.tomcat.accesslog.enabled                               = true
#server.tomcat.accesslog.directory                             = logs
#server.tomcat.accesslog.pattern                               = %h %t "%r" %s %b
#management.trace.include                                      = REQUEST_HEADERS,RESPONSE_HEADERS,ERRORS,PATH_INFO,PATH_TRANSLATED,CONTEXT_PATH,USER_PRINCIPAL,PARAMETERS,QUERY_STRING,AUTH_TYPE,REMOTE_ADDRESS,SESSION_ID,REMOTE_USER
##management.trace.include                               = request-headers,response-headers,cookies,errors
#
## JACKSON
#spring.jackson.serialization.INDENT_OUTPUT                    = true
#spring.jackson.serialization.write_dates_as_timestamps        = false
#
##spring.cloud.config.uri                                       = http://localhost:9090
#
##
## https://codecentric.github.io/spring-boot-admin/1.5.0/
##
#spring.boot.admin.client.enabled                              = false
#spring.boot.admin.client.name                                 = platform-services-api-user-management
#spring.boot.admin.client.service-url                          = http://${management.address}${management.port}/actuator/service-registry
#spring.boot.admin.client.health-url                           = http://${management.address}${management.port}/actuator/health
#spring.boot.admin.client.management-url                       = http://${management.address}${management.port}/actuator
#spring.boot.admin.url                                         = http://${management.address}:9010/bootadmin
#spring.boot.admin.api-path                                    = api/applications
#spring.boot.admin.username                                    = test
#spring.boot.admin.password                                    = asdfasdf


management.context-path                                       = /actuator

eureka.instance.instance-id                                   = user-management-service
eureka.instance.app-group-name                                = platform-services
eureka.instance.appname                                       = user-management-service
eureka.instance.home-page-url-path                            = /
eureka.instance.status-page-url-path                          = /info
eureka.instance.health-check-url-path                         = /health
eureka.instance.prefer-ip-address                             = true
eureka.instance.lease-renewal-interval-in-seconds             = 2
eureka.instance.lease-expiration-duration-in-seconds          = 2
eureka.instance.non-secure-port                               = ${management.port}
eureka.instance.ip-address                                    = 172.17.173.150
eureka.instance.metadata-map.instanceId                       = ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}


#eureka.instance.ip-address                                    = ${management.address}
eureka.client.enabled                                         = true
eureka.client.registryFetchIntervalSeconds                    = 5
#eureka.client.serviceUrl.defaultZone                          = ${EUREKA_SERVICE_URL:http://${server.address}:8761}/eureka/
eureka.client.serviceUrl.defaultZone                          = http://172.17.173.150:8761/eureka/
eureka.client.fetch-registry                                  = true
security.user.name                                            = test
security.user.password                                        = asdfasdf
security.basic.enabled                                        = true
#
#zuul.routes.user.serviceId                                    = EmployeeDashBoard
#zuul.host.socket-timeout-millis                               = 30000
#zuul.routes.test.path                                         = /test/**
#zuul.routes.test.url                                          = http://httpbin.org/get
#ribbon.eureka.enabled                                         = false
#httpbin.ribbon.listOfServers                                  = httpbin.org,eu.httpbin.org

#spring.jpa.properties.jadira.usertype.autoRegisterUserTypes = true

server.session.cookie.name                                    = NOM_NOM_NOM
#
#spring.jmx.enabled = false
#
#
spring.application.admin.enabled                              = true
##spring.application.admin.jmx-name=platform-services-users-admin
##spring.jmx.default-domain=platform-services-users
##endpoints.jmx.domain=asdf
#
##
## https://github.com/spring-cloud-incubator/spring-cloud-kubernetes
##
#spring.cloud.kubernetes.discovery.enabled                     = false
#spring.cloud.kubernetes.reload.enabled                        = true
#spring.cloud.kubernetes.client.namespace                      = spring
#spring.cloud.kubernetes.reload.monitoring-config-maps         = true
#spring.cloud.kubernetes.reload.monitoring-secrets             = true
#spring.cloud.kubernetes.reload.strategy                       = refresh
#spring.cloud.kubernetes.reload.mode                           = event
#spring.cloud.kubernetes.reload.period                         = 15000
#spring.cloud.kubernetes.ribbon.enabled                        = true
#spring.cloud.kubernetes.zipkin.discovery.serviceName          = my-zipkin
#spring.cloud.kubernetes.zipkin.discovery.serviceNamespace     = tracing
#
#logging.level.org.springframework.cloud.consul                = DEBUG

#spring.cloud.config.enabled                                   = false

##stores.ribbon.
#ribbon.eureka.enabled                                         = true
#eureka.enabled                                                = false
#feign.client.config.feignName.loggerLevel                     = full
#
#spring.mvc.dispatch-trace-request                             = true
#spring.mvc.log-resolved-exception                             = true
#spring.mvc.throw-exception-if-no-handler-found                = true
#spring.zipkin.baseUrl                                         = http://zipkin-server/
spring.zipkin.baseUrl                                         = http://${server.address}:9411
spring.zipkin.service.name                                    = ${spring.application.name}
spring.zipkin.locator.discovery.enabled                       = true
